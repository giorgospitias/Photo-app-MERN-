import React, { useState, useEffect } from "react";
import AiPhoto from "./../../components/AiPhoto/AiPhoto";
import FormField from "./../../components/FormField/FormField";
import { Oval } from "react-loader-spinner";
import {
  AiSection,
  CreateLink,
  CreateButton,
  MainContainer,
  Header,
  Paragraph,
  FormFieldContainer,
  Container,
  InnerContainer,
  SearchHeader,
  PhotoHeader,
  ResultsContainer,
} from "./AiPage.styled";

const RenderPhotos = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((photo) => <AiPhoto key={photo._id} {...photo} />);
  }
  return <PhotoHeader>{title}</PhotoHeader>;
};

function AiPage() {
  const [allPhotos, setAllPhotos] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  const [searchText, setSearchText] = useState("");
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);

  const fetchPosts = async () => {
    setIsLoading(true);

    try {
      const response = await fetch("http://localhost:8080/api/v1/post", {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (response.ok) {
        const result = await response.json();
        setAllPhotos(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPhotos.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchedResults(searchResult);
      }, 500)
    );
  };
  return (
    <AiSection>
      <MainContainer>
        <Header>The Community Showcase</Header>
        <Paragraph>
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </Paragraph>
        <CreateLink to="/ai/create">
          <CreateButton>Create</CreateButton>
        </CreateLink>
        <FormFieldContainer>
          <FormField
            labelName="Search posts"
            type="text"
            name="text"
            placeholder="Search something..."
            value={searchText}
            handleChange={handleSearchChange}
          />
        </FormFieldContainer>

        <Container>
          {isLoading ? (
            <InnerContainer>
              <Oval
                height={80}
                width={80}
                color="#5bd6e1"
                secondaryColor="#DBD9D9"
              />
            </InnerContainer>
          ) : (
            <>
              {searchText && (
                <SearchHeader>
                  Showing results for{" "}
                  <span style={{ color: "#222328" }}>{searchText}</span>
                </SearchHeader>
              )}

              <ResultsContainer>
                {searchText ? (
                  <RenderPhotos
                    data={searchedResults}
                    title="No search results"
                  />
                ) : (
                  <RenderPhotos data={allPhotos} title="No photo found" />
                )}
              </ResultsContainer>
            </>
          )}
        </Container>
      </MainContainer>
    </AiSection>
  );
}

export default AiPage;
